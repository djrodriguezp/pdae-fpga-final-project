                   ; Definimos constantes
                   CONSTANT MEM_BASE_PORT_PORT_ID, 00
                   CONSTANT MEM_LAST_PORT_ID, 01
                   CONSTANT MEM_DATA_PORT_ID, 02
                   CONSTANT MEM_ADDR_PORT_ID, 03
                   CONSTANT SUM_DONE_PORT_ID, 04
                   CONSTANT SUM_NUM_LSB, 05
                   CONSTANT SUM_NUM_MSB, 06
                   ; Renombramos registros para que sea más conveniente
                   NAMEREG s0, counter_lsb
                   NAMEREG s1, counter_msb
                   NAMEREG s2, input_num
                   NAMEREG s3, mem_addr_base
                   NAMEREG s4, mem_addr_last
                   NAMEREG s6, mem_addr_curr
                   NAMEREG s7, temp
                   NAMEREG s8, done
                   ; Inicio de ejecucion de instruciones
                   ; Se inicializan contadores
                   LOAD counter_msb, 00
                   LOAD counter_lsb, 00
                   LOAD mem_addr_base, 00
                   LOAD mem_addr_last, 00
                   LOAD mem_addr_curr, 00
                   LOAD temp, 00
                   LOAD done, 00
                   INPUT mem_addr_base, MEM_BASE_PORT_PORT_ID
                   ADD temp, 00                               ;NOP
                   INPUT mem_addr_base, FF                    ;NOP
                   INPUT mem_addr_last, MEM_LAST_PORT_ID
                   ADD temp, 00                               ;NOP
                   INPUT mem_addr_last, FF                    ;NOP
                   OUTPUT counter_lsb, SUM_NUM_LSB
                   OUTPUT counter_msb, SUM_NUM_MSB
                   OUTPUT done, SUM_DONE_PORT_ID
                   ADD mem_addr_curr, mem_addr_base
             MAIN: 
                   OUTPUT mem_addr_curr, MEM_ADDR_PORT_ID
                   ADD temp, 00                               ; NOP
                   INPUT input_num, MEM_DATA_PORT_ID
                   ADD temp, 00                               ;NOP
                   INPUT input_num, FF                        ;NOP
                   ; Validamos si el input es 2
                   COMPARE input_num, 02
                   JUMP Z, IS_PRIME
                   ; Si el numero es par no lo evaluamos
                   LOAD temp, input_num
                   AND temp, 01
                   COMPARE temp, 00
                   JUMP Z, DONE_PRIME
                   ; Evaluamos si el numero es 127
                   COMPARE input_num, 7F
                   JUMP Z, IS_PRIME
                   ; Si el numero menor a 127 se busca la lista de los numeros de la izquierda
                   JUMP C, LEFT_HALF_PRIMES
                   ; Si el numero es mayor a 127 se buscan los numeros de la lista de la derecha
                   JUMP NC, RIGHT_HALF_PRIMES
         IS_PRIME: 
                   ADD counter_lsb, input_num
                   ADDCY counter_msb, 00                      ; Sumar carry out the la operacion anterior
                   JUMP DONE_PRIME
       DONE_PRIME: 
                   COMPARE mem_addr_curr, mem_addr_last
                   JUMP Z, SUM_DONE
                   ADD mem_addr_curr, 01
                   JUMP MAIN
         SUM_DONE: 
                   LOAD done, 01
                   OUTPUT counter_lsb, SUM_NUM_LSB
                   OUTPUT counter_msb, SUM_NUM_MSB
                   OUTPUT done, SUM_DONE_PORT_ID
                   JUMP SUM_DONE
                   ; Los lookup de picoblaze tables no me funcionaban en el simulador de Vivado, así que me tocó
                   ; hacer este chapuz feo :(
                   ; Numeros primos < 127
 LEFT_HALF_PRIMES: 
                   COMPARE input_num, 3'd
                   JUMP Z, IS_PRIME
                   COMPARE input_num, 5'd
                   JUMP Z, IS_PRIME
                   COMPARE input_num, 7'd
                   JUMP Z, IS_PRIME
                   COMPARE input_num, 11'd
                   JUMP Z, IS_PRIME
                   COMPARE input_num, 13'd
                   JUMP Z, IS_PRIME
                   COMPARE input_num, 17'd
                   JUMP Z, IS_PRIME
                   COMPARE input_num, 19'd
                   JUMP Z, IS_PRIME
                   COMPARE input_num, 23'd
                   JUMP Z, IS_PRIME
                   COMPARE input_num, 29'd
                   JUMP Z, IS_PRIME
                   COMPARE input_num, 31'd
                   JUMP Z, IS_PRIME
                   COMPARE input_num, 37'd
                   JUMP Z, IS_PRIME
                   COMPARE input_num, 41'd
                   JUMP Z, IS_PRIME
                   COMPARE input_num, 43'd
                   JUMP Z, IS_PRIME
                   COMPARE input_num, 47'd
                   JUMP Z, IS_PRIME
                   COMPARE input_num, 53'd
                   JUMP Z, IS_PRIME
                   COMPARE input_num, 59'd
                   JUMP Z, IS_PRIME
                   COMPARE input_num, 61'd
                   JUMP Z, IS_PRIME
                   COMPARE input_num, 67'd
                   JUMP Z, IS_PRIME
                   COMPARE input_num, 71'd
                   JUMP Z, IS_PRIME
                   COMPARE input_num, 73'd
                   JUMP Z, IS_PRIME
                   COMPARE input_num, 79'd
                   JUMP Z, IS_PRIME
                   COMPARE input_num, 83'd
                   JUMP Z, IS_PRIME
                   COMPARE input_num, 89'd
                   JUMP Z, IS_PRIME
                   COMPARE input_num, 97'd
                   JUMP Z, IS_PRIME
                   COMPARE input_num, 101'd
                   JUMP Z, IS_PRIME
                   COMPARE input_num, 103'd
                   JUMP Z, IS_PRIME
                   COMPARE input_num, 107'd
                   JUMP Z, IS_PRIME
                   COMPARE input_num, 109'd
                   JUMP Z, IS_PRIME
                   COMPARE input_num, 113'd
                   JUMP Z, IS_PRIME
                   JUMP DONE_PRIME
                   ; Numeros primos > 127
RIGHT_HALF_PRIMES: 
                   COMPARE input_num, 131'd
                   JUMP Z, IS_PRIME
                   COMPARE input_num, 137'd
                   JUMP Z, IS_PRIME
                   COMPARE input_num, 139'd
                   JUMP Z, IS_PRIME
                   COMPARE input_num, 149'd
                   JUMP Z, IS_PRIME
                   COMPARE input_num, 151'd
                   JUMP Z, IS_PRIME
                   COMPARE input_num, 157'd
                   JUMP Z, IS_PRIME
                   COMPARE input_num, 163'd
                   JUMP Z, IS_PRIME
                   COMPARE input_num, 167'd
                   JUMP Z, IS_PRIME
                   COMPARE input_num, 173'd
                   JUMP Z, IS_PRIME
                   COMPARE input_num, 179'd
                   JUMP Z, IS_PRIME
                   COMPARE input_num, 181'd
                   JUMP Z, IS_PRIME
                   COMPARE input_num, 191'd
                   JUMP Z, IS_PRIME
                   COMPARE input_num, 193'd
                   JUMP Z, IS_PRIME
                   COMPARE input_num, 197'd
                   JUMP Z, IS_PRIME
                   COMPARE input_num, 199'd
                   JUMP Z, IS_PRIME
                   COMPARE input_num, 211'd
                   JUMP Z, IS_PRIME
                   COMPARE input_num, 223'd
                   JUMP Z, IS_PRIME
                   COMPARE input_num, 227'd
                   JUMP Z, IS_PRIME
                   COMPARE input_num, 229'd
                   JUMP Z, IS_PRIME
                   COMPARE input_num, 233'd
                   JUMP Z, IS_PRIME
                   COMPARE input_num, 239'd
                   JUMP Z, IS_PRIME
                   COMPARE input_num, 241'd
                   JUMP Z, IS_PRIME
                   COMPARE input_num, 251'd
                   JUMP Z, IS_PRIME
                   JUMP DONE_PRIME
